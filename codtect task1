/*This program implements a simple Student Management Systemthat allows users to perform CRUD operations (Create, Read, Update, Delete on student records*/

#include <stdio.h>
#include <string.h>

#define MAX_STUDENTS 100

typedef struct {
    int id;
    char name[50];
    int age;
    char grade[5];
} Student;

Student students[MAX_STUDENTS];
int student_count = 0;

void add_student() {
    if (student_count >= MAX_STUDENTS) {
        printf("Student limit reached.\n");
        return;
    }
    printf("Enter student ID: ");
    scanf("%d", &students[student_count].id);
    printf("Enter student name: ");
    scanf("%s", students[student_count].name);
    printf("Enter student age: ");
    scanf("%d", &students[student_count].age);
    printf("Enter student grade: ");
    scanf("%s", students[student_count].grade);
    student_count++;
    printf("Student added successfully.\n");
}

void edit_student() {
    int id, found = 0;
    printf("Enter student ID to edit: ");
    scanf("%d", &id);
    for (int i = 0; i < student_count; i++) {
        if (students[i].id == id) {
            found = 1;
            printf("Enter new name: ");
            scanf("%s", students[i].name);
            printf("Enter new age: ");
            scanf("%d", &students[i].age);
            printf("Enter new grade: ");
            scanf("%s", students[i].grade);
            printf("Student record updated successfully.\n");
            break;
        }
    }
    if (!found) {
        printf("Student not found.\n");
    }
}

void delete_student() {
    int id, found = 0;
    printf("Enter student ID to delete: ");
    scanf("%d", &id);
    for (int i = 0; i < student_count; i++) {
        if (students[i].id == id) {
            found = 1;
            for (int j = i; j < student_count - 1; j++) {
                students[j] = students[j + 1];
            }
            student_count--;
            printf("Student record deleted successfully.\n");
            break;
        }
    }
    if (!found) {
        printf("Student not found.\n");
    }
}

void view_students() {
    if (student_count == 0) {
        printf("No students to display.\n");
        return;
    }
    printf("Student Records:\n");
    for (int i = 0; i < student_count; i++) {
        printf("ID: %d, Name: %s, Age: %d, Grade: %s\n", students[i].id, students[i].name, students[i].age, students[i].grade);
    }
}

int main() {
    int choice;
    while (1) {
        printf("\nStudent Management System\n");
        printf("1. Add Student\n");
        printf("2. Edit Student\n");
        printf("3. Delete Student\n");
        printf("4. View Students\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                add_student();
                break;
            case 2:
                edit_student();
                break;
            case 3:
                delete_student();
                break;
            case 4:
                view_students();
                break;
            case 5:
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
